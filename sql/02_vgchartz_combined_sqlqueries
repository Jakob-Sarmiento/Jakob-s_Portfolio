#1a - Top 5 highest selling genres globally
SELECT genre,
       ROUND(SUM(total_sales), 2) AS total_global_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY genre
ORDER BY total_global_sales DESC
LIMIT 5;

#1b - Top 5 highest selling genres in North America
SELECT genre,
       ROUND(SUM(na_sales), 2) AS total_na_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY genre
ORDER BY total_na_sales DESC
LIMIT 5;

#2a - Top 10 highest selling titles in North America
SELECT
    title,
    ROUND(SUM(na_sales), 2) AS total_na_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY title
ORDER BY total_na_sales DESC
LIMIT 10;

#2b - Top 10 highest-selling titles in North America
SELECT
  title,
  ROUND(SUM(na_sales), 2) AS total_na_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY title
ORDER BY total_na_sales DESC
LIMIT 10;

#3a - Top 10 Global games 
SELECT
  title,
  ROUND(SUM(total_sales), 2) AS total_global_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY title
ORDER BY total_global_sales DESC
LIMIT 10;

#3b — Top 5 publishers in North America
SELECT
  publisher,
  ROUND(SUM(na_sales), 2) AS total_na_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY publisher
ORDER BY total_na_sales DESC
LIMIT 5;

#3b — Top 5 publishers globally
SELECT
  publisher,
  ROUND(SUM(total_sales), 2) AS total_global_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
GROUP BY publisher
ORDER BY total_global_sales DESC
LIMIT 5;

#4 — NA Sales Increase/Decrease
WITH parsed AS (
  SELECT
    *,
    EXTRACT(YEAR FROM SAFE.PARSE_DATE('%Y-%m-%d', release_date)) AS year_
  FROM `jakemoneyorg.vgchartz.analysis_ox`
),
per_decade AS (
  SELECT
    (CAST(year_ AS INT64) / 10) * 10 AS decade_start,
    ROUND(SUM(na_sales), 2) AS total_na_sales
  FROM parsed
  WHERE year_ IS NOT NULL
  GROUP BY decade_start
),
with_lag AS (
  SELECT
    decade_start,
    CONCAT(CAST(decade_start AS STRING), 's') AS decade_label,
    total_na_sales,
    LAG(total_na_sales) OVER (ORDER BY decade_start) AS prev_decade_sales
  FROM per_decade
)
SELECT
  decade_start,  
  decade_label,
  total_na_sales,
  CASE
    WHEN prev_decade_sales IS NULL OR prev_decade_sales = 0 THEN NULL
    ELSE ROUND(((total_na_sales - prev_decade_sales) * 100.0 / prev_decade_sales), 2)
  END AS growth_vs_prev_decade_pct
FROM with_lag
WHERE decade_start BETWEEN 2000 AND 2020
ORDER BY decade_start;

#5 — PC vs Xbox One vs PS4 in NA
SELECT
  CASE
    WHEN console = 'PC'   THEN 'PC'
    WHEN console = 'XOne' THEN 'Xbox One'
    WHEN console = 'PS4'  THEN 'PS4'
    ELSE NULL
  END AS platform,
  ROUND(SUM(na_sales), 2) AS total_na_sales
FROM `jakemoneyorg.vgchartz.analysis_ox`
WHERE console IN ('PC','XOne','PS4')
GROUP BY platform
ORDER BY total_na_sales DESC;
